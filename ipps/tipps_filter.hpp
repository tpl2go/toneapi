#include <ipps.h>
#include <ipps_l.h>
#include <ippcore.h>
#include <stdexcept>
#include "tipp_error.hpp"
#include "tipps_support.hpp"
#include <vector>

namespace tipp
{

    //   ippsConvBiased_32f

    //   ippsFIRSparseGetDlyLine_32f
    //   ippsFIRSparseGetDlyLine_32fc
    //   ippsFIRSparseGetStateSize_32f
    //   ippsFIRSparseGetStateSize_32fc
    //   ippsFIRSparseInit_32f
    //   ippsFIRSparseInit_32fc
    //   ippsFIRSparseSetDlyLine_32f
    //   ippsFIRSparseSetDlyLine_32fc
    //   ippsFIRSparse_32f
    //   ippsFIRSparse_32fc

    //   ippsIIR32f_16s_ISfs
    //   ippsIIR32f_16s_Sfs
    //   ippsIIR32fc_16sc_ISfs
    //   ippsIIR32fc_16sc_Sfs
    //   ippsIIR64f_16s_ISfs
    //   ippsIIR64f_16s_Sfs
    //   ippsIIR64f_32f
    //   ippsIIR64f_32f_I
    //   ippsIIR64f_32s_IPSfs
    //   ippsIIR64f_32s_ISfs
    //   ippsIIR64f_32s_PSfs
    //   ippsIIR64f_32s_Sfs
    //   ippsIIR64fc_16sc_ISfs
    //   ippsIIR64fc_16sc_Sfs
    //   ippsIIR64fc_32fc
    //   ippsIIR64fc_32fc_I
    //   ippsIIR64fc_32sc_ISfs
    //   ippsIIR64fc_32sc_Sfs
    //   ippsIIRGenGetBufferSize
    //   ippsIIRGenHighpass_64f
    //   ippsIIRGenLowpass_64f
    //   ippsIIRGetDlyLine32f_16s
    //   ippsIIRGetDlyLine32fc_16sc
    //   ippsIIRGetDlyLine64f_16s
    //   ippsIIRGetDlyLine64f_32f
    //   ippsIIRGetDlyLine64f_32s
    //   ippsIIRGetDlyLine64f_DF1_32s
    //   ippsIIRGetDlyLine64fc_16sc
    //   ippsIIRGetDlyLine64fc_32fc
    //   ippsIIRGetDlyLine64fc_32sc
    //   ippsIIRGetDlyLine_32f
    //   ippsIIRGetDlyLine_32fc
    //   ippsIIRGetDlyLine_64f
    //   ippsIIRGetDlyLine_64fc
    //   ippsIIRGetStateSize32f_16s
    //   ippsIIRGetStateSize32f_BiQuad_16s
    //   ippsIIRGetStateSize32fc_16sc
    //   ippsIIRGetStateSize32fc_BiQuad_16sc
    //   ippsIIRGetStateSize64f_16s
    //   ippsIIRGetStateSize64f_32f
    //   ippsIIRGetStateSize64f_32s
    //   ippsIIRGetStateSize64f_BiQuad_16s
    //   ippsIIRGetStateSize64f_BiQuad_32f
    //   ippsIIRGetStateSize64f_BiQuad_32s
    //   ippsIIRGetStateSize64f_BiQuad_DF1_32s
    //   ippsIIRGetStateSize64fc_16sc
    //   ippsIIRGetStateSize64fc_32fc
    //   ippsIIRGetStateSize64fc_32sc
    //   ippsIIRGetStateSize64fc_BiQuad_16sc
    //   ippsIIRGetStateSize64fc_BiQuad_32fc
    //   ippsIIRGetStateSize64fc_BiQuad_32sc
    //   ippsIIRGetStateSize_32f
    //   ippsIIRGetStateSize_32fc
    //   ippsIIRGetStateSize_64f
    //   ippsIIRGetStateSize_64fc
    //   ippsIIRGetStateSize_BiQuad_32f
    //   ippsIIRGetStateSize_BiQuad_32fc
    //   ippsIIRGetStateSize_BiQuad_64f
    //   ippsIIRGetStateSize_BiQuad_64fc
    //   ippsIIRGetStateSize_BiQuad_DF1_32f
    //   ippsIIRIIR64f_32f
    //   ippsIIRIIR64f_32f_I
    //   ippsIIRIIRGetDlyLine64f_32f
    //   ippsIIRIIRGetDlyLine_32f
    //   ippsIIRIIRGetDlyLine_64f
    //   ippsIIRIIRGetStateSize64f_32f
    //   ippsIIRIIRGetStateSize_32f
    //   ippsIIRIIRGetStateSize_64f
    //   ippsIIRIIRInit64f_32f
    //   ippsIIRIIRInit_32f
    //   ippsIIRIIRInit_64f
    //   ippsIIRIIRSetDlyLine64f_32f
    //   ippsIIRIIRSetDlyLine_32f
    //   ippsIIRIIRSetDlyLine_64f
    //   ippsIIRIIR_32f
    //   ippsIIRIIR_32f_I
    //   ippsIIRIIR_64f
    //   ippsIIRIIR_64f_I
    //   ippsIIRInit32f_16s
    //   ippsIIRInit32f_BiQuad_16s
    //   ippsIIRInit32fc_16sc
    //   ippsIIRInit32fc_BiQuad_16sc
    //   ippsIIRInit64f_16s
    //   ippsIIRInit64f_32f
    //   ippsIIRInit64f_32s
    //   ippsIIRInit64f_BiQuad_16s
    //   ippsIIRInit64f_BiQuad_32f
    //   ippsIIRInit64f_BiQuad_32s
    //   ippsIIRInit64f_BiQuad_DF1_32s
    //   ippsIIRInit64fc_16sc
    //   ippsIIRInit64fc_32fc
    //   ippsIIRInit64fc_32sc
    //   ippsIIRInit64fc_BiQuad_16sc
    //   ippsIIRInit64fc_BiQuad_32fc
    //   ippsIIRInit64fc_BiQuad_32sc
    //   ippsIIRInit_32f
    //   ippsIIRInit_32fc
    //   ippsIIRInit_64f
    //   ippsIIRInit_64fc
    //   ippsIIRInit_BiQuad_32f
    //   ippsIIRInit_BiQuad_32fc
    //   ippsIIRInit_BiQuad_64f
    //   ippsIIRInit_BiQuad_64fc
    //   ippsIIRInit_BiQuad_DF1_32f
    //   ippsIIRSetDlyLine32f_16s
    //   ippsIIRSetDlyLine32fc_16sc
    //   ippsIIRSetDlyLine64f_16s
    //   ippsIIRSetDlyLine64f_32f
    //   ippsIIRSetDlyLine64f_32s
    //   ippsIIRSetDlyLine64f_DF1_32s
    //   ippsIIRSetDlyLine64fc_16sc
    //   ippsIIRSetDlyLine64fc_32fc
    //   ippsIIRSetDlyLine64fc_32sc
    //   ippsIIRSetDlyLine_32f
    //   ippsIIRSetDlyLine_32fc
    //   ippsIIRSetDlyLine_64f
    //   ippsIIRSetDlyLine_64fc
    //   ippsIIRSparseGetStateSize_32f
    //   ippsIIRSparseInit_32f
    //   ippsIIRSparse_32f
    //   ippsIIR_32f
    //   ippsIIR_32f_I
    //   ippsIIR_32f_IP
    //   ippsIIR_32f_P
    //   ippsIIR_32fc
    //   ippsIIR_32fc_I
    //   ippsIIR_64f
    //   ippsIIR_64f_I
    //   ippsIIR_64fc
    //   ippsIIR_64fc_I

    //   ippsPatternMatchGetBufferSize
    //   ippsPatternMatch_8u16u

    //   ippsResamplePolyphaseFixedGetSize_16s
    //   ippsResamplePolyphaseFixedGetSize_32f
    //   ippsResamplePolyphaseFixedInit_16s
    //   ippsResamplePolyphaseFixedInit_32f
    //   ippsResamplePolyphaseFixed_16s
    //   ippsResamplePolyphaseFixed_32f
    //   ippsResamplePolyphaseGetFixedFilter_16s
    //   ippsResamplePolyphaseGetFixedFilter_32f
    //   ippsResamplePolyphaseGetSize_16s
    //   ippsResamplePolyphaseGetSize_32f
    //   ippsResamplePolyphaseInit_16s
    //   ippsResamplePolyphaseInit_32f
    //   ippsResamplePolyphaseSetFixedFilter_16s
    //   ippsResamplePolyphaseSetFixedFilter_32f
    //   ippsResamplePolyphase_16s
    //   ippsResamplePolyphase_32f

    //   ippsWTFwdGetDlyLine_16s32f
    //   ippsWTFwdGetDlyLine_16u32f
    //   ippsWTFwdGetDlyLine_32f
    //   ippsWTFwdGetDlyLine_8u32f
    //   ippsWTFwdGetSize
    //   ippsWTFwdInit_16s32f
    //   ippsWTFwdInit_16u32f
    //   ippsWTFwdInit_32f
    //   ippsWTFwdInit_8u32f
    //   ippsWTFwdSetDlyLine_16s32f
    //   ippsWTFwdSetDlyLine_16u32f
    //   ippsWTFwdSetDlyLine_32f
    //   ippsWTFwdSetDlyLine_8u32f
    //   ippsWTFwd_16s32f
    //   ippsWTFwd_16u32f
    //   ippsWTFwd_32f
    //   ippsWTFwd_8u32f
    //   ippsWTHaarFwd_16s_Sfs
    //   ippsWTHaarFwd_32f
    //   ippsWTHaarFwd_64f
    //   ippsWTHaarInv_16s_Sfs
    //   ippsWTHaarInv_32f
    //   ippsWTHaarInv_64f
    //   ippsWTInvGetDlyLine_32f
    //   ippsWTInvGetDlyLine_32f16s
    //   ippsWTInvGetDlyLine_32f16u
    //   ippsWTInvGetDlyLine_32f8u
    //   ippsWTInvGetSize
    //   ippsWTInvInit_32f
    //   ippsWTInvInit_32f16s
    //   ippsWTInvInit_32f16u
    //   ippsWTInvInit_32f8u
    //   ippsWTInvSetDlyLine_32f
    //   ippsWTInvSetDlyLine_32f16s
    //   ippsWTInvSetDlyLine_32f16u
    //   ippsWTInvSetDlyLine_32f8u
    //   ippsWTInv_32f
    //   ippsWTInv_32f16s
    //   ippsWTInv_32f16u
    //   ippsWTInv_32f8u

    //   ippsFIRSparseGetDlyLine_32f
    //   ippsFIRSparseGetDlyLine_32fc
    //   ippsFIRSparseGetStateSize_32f
    //   ippsFIRSparseGetStateSize_32fc
    //   ippsFIRSparseInit_32f
    //   ippsFIRSparseInit_32fc
    //   ippsFIRSparseSetDlyLine_32f
    //   ippsFIRSparseSetDlyLine_32fc
    //   ippsFIRSparse_32f
    //   ippsFIRSparse_32fc
    //   ippsFilterMedianGetBufferSize
    //   ippsFilterMedian_16s
    //   ippsFilterMedian_16s_I
    //   ippsFilterMedian_32f
    //   ippsFilterMedian_32f_I
    //   ippsFilterMedian_32s
    //   ippsFilterMedian_32s_I
    //   ippsFilterMedian_64f
    //   ippsFilterMedian_64f_I
    //   ippsFilterMedian_8u
    //   ippsFilterMedian_8u_I

    //   ippsFindNearestOne_16u
    //   ippsFindNearest_16u

    //   ippsIIR32f_16s_ISfs
    //   ippsIIR32f_16s_Sfs
    //   ippsIIR32fc_16sc_ISfs
    //   ippsIIR32fc_16sc_Sfs
    //   ippsIIR64f_16s_ISfs
    //   ippsIIR64f_16s_Sfs
    //   ippsIIR64f_32f
    //   ippsIIR64f_32f_I
    //   ippsIIR64f_32s_IPSfs
    //   ippsIIR64f_32s_ISfs
    //   ippsIIR64f_32s_PSfs
    //   ippsIIR64f_32s_Sfs
    //   ippsIIR64fc_16sc_ISfs
    //   ippsIIR64fc_16sc_Sfs
    //   ippsIIR64fc_32fc
    //   ippsIIR64fc_32fc_I
    //   ippsIIR64fc_32sc_ISfs
    //   ippsIIR64fc_32sc_Sfs
    //   ippsIIRGenGetBufferSize
    //   ippsIIRGenHighpass_64f
    //   ippsIIRGenLowpass_64f
    //   ippsIIRGetDlyLine32f_16s
    //   ippsIIRGetDlyLine32fc_16sc
    //   ippsIIRGetDlyLine64f_16s
    //   ippsIIRGetDlyLine64f_32f
    //   ippsIIRGetDlyLine64f_32s
    //   ippsIIRGetDlyLine64f_DF1_32s
    //   ippsIIRGetDlyLine64fc_16sc
    //   ippsIIRGetDlyLine64fc_32fc
    //   ippsIIRGetDlyLine64fc_32sc
    //   ippsIIRGetDlyLine_32f
    //   ippsIIRGetDlyLine_32fc
    //   ippsIIRGetDlyLine_64f
    //   ippsIIRGetDlyLine_64fc
    //   ippsIIRGetStateSize32f_16s
    //   ippsIIRGetStateSize32f_BiQuad_16s
    //   ippsIIRGetStateSize32fc_16sc
    //   ippsIIRGetStateSize32fc_BiQuad_16sc
    //   ippsIIRGetStateSize64f_16s
    //   ippsIIRGetStateSize64f_32f
    //   ippsIIRGetStateSize64f_32s
    //   ippsIIRGetStateSize64f_BiQuad_16s
    //   ippsIIRGetStateSize64f_BiQuad_32f
    //   ippsIIRGetStateSize64f_BiQuad_32s
    //   ippsIIRGetStateSize64f_BiQuad_DF1_32s
    //   ippsIIRGetStateSize64fc_16sc
    //   ippsIIRGetStateSize64fc_32fc
    //   ippsIIRGetStateSize64fc_32sc
    //   ippsIIRGetStateSize64fc_BiQuad_16sc
    //   ippsIIRGetStateSize64fc_BiQuad_32fc
    //   ippsIIRGetStateSize64fc_BiQuad_32sc
    //   ippsIIRGetStateSize_32f
    //   ippsIIRGetStateSize_32fc
    //   ippsIIRGetStateSize_64f
    //   ippsIIRGetStateSize_64fc
    //   ippsIIRGetStateSize_BiQuad_32f
    //   ippsIIRGetStateSize_BiQuad_32fc
    //   ippsIIRGetStateSize_BiQuad_64f
    //   ippsIIRGetStateSize_BiQuad_64fc
    //   ippsIIRGetStateSize_BiQuad_DF1_32f
    //   ippsIIRIIR64f_32f
    //   ippsIIRIIR64f_32f_I
    //   ippsIIRIIRGetDlyLine64f_32f
    //   ippsIIRIIRGetDlyLine_32f
    //   ippsIIRIIRGetDlyLine_64f
    //   ippsIIRIIRGetStateSize64f_32f
    //   ippsIIRIIRGetStateSize_32f
    //   ippsIIRIIRGetStateSize_64f
    //   ippsIIRIIRInit64f_32f
    //   ippsIIRIIRInit_32f
    //   ippsIIRIIRInit_64f
    //   ippsIIRIIRSetDlyLine64f_32f
    //   ippsIIRIIRSetDlyLine_32f
    //   ippsIIRIIRSetDlyLine_64f
    //   ippsIIRIIR_32f
    //   ippsIIRIIR_32f_I
    //   ippsIIRIIR_64f
    //   ippsIIRIIR_64f_I
    //   ippsIIRInit32f_16s
    //   ippsIIRInit32f_BiQuad_16s
    //   ippsIIRInit32fc_16sc
    //   ippsIIRInit32fc_BiQuad_16sc
    //   ippsIIRInit64f_16s
    //   ippsIIRInit64f_32f
    //   ippsIIRInit64f_32s
    //   ippsIIRInit64f_BiQuad_16s
    //   ippsIIRInit64f_BiQuad_32f
    //   ippsIIRInit64f_BiQuad_32s
    //   ippsIIRInit64f_BiQuad_DF1_32s
    //   ippsIIRInit64fc_16sc
    //   ippsIIRInit64fc_32fc
    //   ippsIIRInit64fc_32sc
    //   ippsIIRInit64fc_BiQuad_16sc
    //   ippsIIRInit64fc_BiQuad_32fc
    //   ippsIIRInit64fc_BiQuad_32sc
    //   ippsIIRInit_32f
    //   ippsIIRInit_32fc
    //   ippsIIRInit_64f
    //   ippsIIRInit_64fc
    //   ippsIIRInit_BiQuad_32f
    //   ippsIIRInit_BiQuad_32fc
    //   ippsIIRInit_BiQuad_64f
    //   ippsIIRInit_BiQuad_64fc
    //   ippsIIRInit_BiQuad_DF1_32f
    //   ippsIIRSetDlyLine32f_16s
    //   ippsIIRSetDlyLine32fc_16sc
    //   ippsIIRSetDlyLine64f_16s
    //   ippsIIRSetDlyLine64f_32f
    //   ippsIIRSetDlyLine64f_32s
    //   ippsIIRSetDlyLine64f_DF1_32s
    //   ippsIIRSetDlyLine64fc_16sc
    //   ippsIIRSetDlyLine64fc_32fc
    //   ippsIIRSetDlyLine64fc_32sc
    //   ippsIIRSetDlyLine_32f
    //   ippsIIRSetDlyLine_32fc
    //   ippsIIRSetDlyLine_64f
    //   ippsIIRSetDlyLine_64fc
    //   ippsIIRSparseGetStateSize_32f
    //   ippsIIRSparseInit_32f
    //   ippsIIRSparse_32f
    //   ippsIIR_32f
    //   ippsIIR_32f_I
    //   ippsIIR_32f_IP
    //   ippsIIR_32f_P
    //   ippsIIR_32fc
    //   ippsIIR_32fc_I
    //   ippsIIR_64f
    //   ippsIIR_64f_I
    //   ippsIIR_64fc
    //   ippsIIR_64fc_I

    //   ippsAutoCorrNormGetBufferSize
    //   ippsAutoCorrNorm_32f
    //   ippsAutoCorrNorm_32fc
    //   ippsAutoCorrNorm_64f
    //   ippsAutoCorrNorm_64fc

}
